generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  token    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  favorites    Favorites[]
  observations ObservationPokemon[]
  pokemons     Pokemon[]
}

model Pokemon {
  id             Int    @id @default(autoincrement())
  name           String
  type           String
  image          String
  description    String
  height         String
  weight         String
  baseExperience Int
  userId         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  favorites    Favorites[]
  observations ObservationPokemon[]
  user         User                 @relation(fields: [userId], references: [id])

  types Type[]

  @@map("pokemons")
}

model Type {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pokemons Pokemon[]

  @@map("types_pokemons")
}

model Favorites {
  id        Int @id @default(autoincrement())
  userId    Int
  pokemonId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  pokemon Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("favorites_pokemons")
}

model ObservationPokemon {
  id          Int    @id @default(autoincrement())
  description String
  userId      Int
  pokemonId   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  pokemon Pokemon @relation(fields: [pokemonId], references: [id])

  @@map("observations_pokemons")
}
